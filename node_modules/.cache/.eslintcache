[{"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/index.tsx":"1","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/App.tsx":"2","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutes.tsx":"3","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/Boundary.tsx":"4","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Customers/Customer.tsx":"5","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/StoreLayOut.tsx":"6","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/BeverageModules/BeverageModule.tsx":"7","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/VegtableMoudules/VegtableMoudle.tsx":"8","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/premade_componenets/Modals/VerticalModal.tsx":"9","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/Line/Line.tsx":"10","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/CartPickup.tsx":"11","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutesAuto.tsx":"12","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/Cameras.tsx":"13","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/DashBoard.tsx":"14","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/grid/Gird.tsx":"15","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/GlobalContext.tsx":"16"},{"size":341,"mtime":1681885318377,"results":"17","hashOfConfig":"18"},{"size":419,"mtime":1681885435012,"results":"19","hashOfConfig":"18"},{"size":11483,"mtime":1681908007979,"results":"20","hashOfConfig":"18"},{"size":568,"mtime":1681852801848,"results":"21","hashOfConfig":"18"},{"size":1506,"mtime":1681852649436,"results":"22","hashOfConfig":"18"},{"size":1905,"mtime":1681893291650,"results":"23","hashOfConfig":"18"},{"size":4047,"mtime":1681730062272,"results":"24","hashOfConfig":"18"},{"size":2271,"mtime":1681741338158,"results":"25","hashOfConfig":"18"},{"size":1172,"mtime":1681705284737,"results":"26","hashOfConfig":"18"},{"size":485,"mtime":1681708275721,"results":"27","hashOfConfig":"18"},{"size":602,"mtime":1681853541268,"results":"28","hashOfConfig":"18"},{"size":9947,"mtime":1681887618069,"results":"29","hashOfConfig":"18"},{"size":1019,"mtime":1681887209327,"results":"30","hashOfConfig":"18"},{"size":1440,"mtime":1681887886684,"results":"31","hashOfConfig":"18"},{"size":306,"mtime":1681709878196,"results":"32","hashOfConfig":"18"},{"size":1285,"mtime":1681887835515,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kdzdh6",{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/index.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/App.tsx",["88","89"],[],"import React from 'react';\nimport './App.css';\nimport StoreLayOut from '../src/components/StoreLayOut';\nimport CartRoutes from '../src/components/cart/CartRoutes';\nimport DashBoard from './components/DashBoard';\nimport { useGlobalState } from './GlobalContext';\nfunction App() {\n\n\n  \n  return (\n    <div className=\"mainContainer\">\n      <StoreLayOut \n      />\n      <DashBoard/>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutes.tsx",["90","91","92"],[],"import React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \".././cart/Customers/Customer\";\nimport Boundary from \".././cart/Map/Boundary\";\nimport CartPickup from \".././cart/Map/CartPickup\";\nimport Cameras from \".././cart/Map/Cameras\";\nimport { useGlobalState } from \"../../GlobalContext\";\n\ntype recordingArray = {\n  direction: string;\n  time: number;\n  y: number;\n  x: number;\n};\n\ninterface RoutesProps {}\n\nconst CartRoutes: React.FC<RoutesProps> = () => {\n\n  const {camerasControlState} = useGlobalState();\n  \n  const [currentDirection, setCurrentDirection] = useState(\"\");\n  const [recording, setRecording] = useState<recordingArray[]>([]);\n  // let recording: recordingArray[] = [];\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const boundaries = useMemo(() => {\n    const boundaries: Boundary[] = [];\n    return boundaries;\n  }, []);\n  const cartPickup = useMemo(() => {\n    const cartPickup: CartPickup[] = [];\n    return cartPickup;\n  }, []);\n  const cameras = useMemo(() => {\n    const cameras: Cameras[] = [];\n    return cameras;\n  }, []);\n\n  const customer = useMemo(() => {\n    const customer: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer;\n  }, []);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas!.getContext(\"2d\");\n    canvas!.height = 470;\n    canvas!.width = 600;\n    boundaries.forEach((boundary) => {\n      boundary.draw(ctx);\n    });\n    cartPickup.forEach((cartPick) => {\n      cartPick.draw(ctx);\n    });\n\n    function animate() {\n      requestAnimationFrame(animate);\n      ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n      boundaries.forEach((boundary) => {\n        boundary.draw(ctx);\n        if (\n          customer.position.y - customer.radius +3+ customer.velocity.y <=\n            boundary.position.y + boundary.height &&\n          customer.position.x + customer.radius -5 + customer.velocity.x >=\n            boundary.position.x &&\n          customer.position.y + customer.radius -3 + customer.velocity.y >=\n            boundary.position.y &&\n          customer.position.x + customer.radius -15 + customer.velocity.x <=\n            boundary.position.x + boundary.width\n        ) {\n          customer.velocity.x = 0;\n          customer.velocity.y = 0;\n        }\n        \n      });\n      cartPickup.forEach((cartPick) => {\n        cartPick.draw(ctx);\n        \n        if (\n          customer.position.y - customer.radius +3+ customer.velocity.y <=\n            cartPick.position.y + cartPick.height &&\n          customer.position.x + customer.radius -5 + customer.velocity.x >=\n            cartPick.position.x &&\n          customer.position.y + customer.radius -3 + customer.velocity.y >=\n            cartPick.position.y &&\n          customer.position.x + customer.radius -15 + customer.velocity.x <=\n            cartPick.position.x + cartPick.width\n        ) {\n          customer.pullCart();\n        }\n      });\n      cameras.forEach((camera) => {\n        camera.draw(ctx);\n        if (\n          customer.position.y - customer.radius +3+ customer.velocity.y <=\n            camera.position.y + camera.height &&\n          customer.position.x + customer.radius -5 + customer.velocity.x >=\n            camera.position.x &&\n          customer.position.y + customer.radius -3 + customer.velocity.y >=\n            camera.position.y &&\n          customer.position.x + customer.radius -15 + customer.velocity.x <=\n            camera.position.x + camera.width\n        ) {\n          camera.focusCamera(ctx,true);\n        }\n\n      });\n      \n      \n      customer.update(ctx);  \n      // console.log(currentDirection);\n       \n    }\n    animate();\n  }, [\n  ]);\n\n\n\n\nlet records = recording \n//if current direction is not the same ast the last direction of records array then push the current direction and time to the records array\nif (currentDirection !== records[records.length - 1]?.direction) {\nrecords.push ({direction: currentDirection, time: Date.now()\n,y: customer.position.y, x: customer.position.x})\n}\nconsole.log(records);\nfunction moveCustomer(steps: any[], index: number, customer: Customer) {\n  if (index < steps.length) {\n    let step = steps[index];\n    \n    if (step.direction === \"right\") {\n      customer.moveRight();\n    } else if (step.direction === \"left\") {\n      customer.moveLeft();\n    } else if (step.direction === \"up\") {\n      customer.moveUp();\n    } else if (step.direction === \"down\") {\n      customer.moveDown();\n    } else if (step.direction === \"stop\") {\n      customer.stopMovingHorizontal();\n      customer.stopMovingVertical();\n    } else if (step.direction === \"end\") {\n      customer.stopMovingHorizontal();\n      customer.stopMovingVertical();\n      return;\n    }\n    \n    setTimeout(() => {\n      moveCustomer(steps, index + 1, customer);\n    }, step.time - (index === 0 ? 0 : steps[index - 1].time));\n  }\n}\n\n\n\n\n\nconst map = [\n  [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \"-\",\"-\",\"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\",  \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"\", \"\",\"\", \"\", \" \", \" \", \"\", \"\",\"\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"\",\"\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n];\n\n  map.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(\n            new Boundary({\n              x: Boundary.width * j,\n              y: Boundary.height * i,\n            })\n          );\n          break;\n          \n        case \"+\" :\n          cartPickup.push(\n            new CartPickup({\n              x: CartPickup.width * j,\n              y: CartPickup.height * i,\n            })\n          );\n          break;\n          case \"x\" :\n            if (camerasControlState === false) {\n              break\n            }\n            else{\n            cameras.push(\n              new Cameras({\n                x: Cameras.width * j,\n                y: Cameras.height * i,\n              })\n            );\n            }\n            break;\n       \n      }\n    });\n\n\n    const keys = {\n      w: { pressed: false },\n      a: { pressed: false },\n      s: { pressed: false },\n      d: { pressed: false },\n    };\n    document.addEventListener(\"keyup\", ({ key }) => {\n      switch (key) {\n        case \"w\":\n          keys.w.pressed = false;\n          \n          break;\n        case \"a\":\n          keys.a.pressed = false;\n          break;\n        case \"s\":\n          keys.s.pressed = false;\n          break;\n        case \"d\":\n          keys.d.pressed = false;\n          break;\n      }\n    });\n    document.addEventListener(\"keydown\", ({ key }) => {\n      switch (key) {\n        case \"w\":\n          keys.w.pressed = true;\n          setCurrentDirection(\"up\");\n          customer.moveUp();\n\n          break;\n        case \"a\":\n          keys.a.pressed = true;\n          customer.moveLeft();\n          setCurrentDirection(\"left\");\n\n          break;\n        case \"s\":\n          keys.s.pressed = true;\n          customer.moveDown();\n          setCurrentDirection(\"down\");\n          break;\n        case \"d\":\n          keys.d.pressed = true;\n          customer.moveRight();\n          setCurrentDirection(\"right\");\n          break;\n      }\n    });\n\n    document.addEventListener(\"keyup\", ({ key }) => {\n      switch (key) {\n        case \"w\":\n          keys.w.pressed = false;\n          customer.stopMovingVertical();\n          setCurrentDirection(\"stop\");\n          break;\n        case \"a\":\n          keys.a.pressed = false;\n          customer.stopMovingHorizontal();\n          setCurrentDirection(\"stop\");\n          break;\n        case \"s\":\n          keys.s.pressed = false;\n          customer.stopMovingVertical();\n          setCurrentDirection(\"stop\");\n          break;\n        case \"d\":\n          keys.d.pressed = false;\n          customer.stopMovingHorizontal();\n          setCurrentDirection(\"stop\");\n          break;\n          //on enter key press setCurrentDirection to \"end\"\n        case \"Enter\":\n          setCurrentDirection(\"end\");\n          break;\n          \n      }\n    });\n\n  });\n    \n  return <canvas className=\"canvas\" ref={canvasRef}></canvas>;\n};\n\nexport default CartRoutes;\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/Boundary.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Customers/Customer.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/StoreLayOut.tsx",["93"],[],"import React from 'react'\nimport { useState } from 'react'\nimport storeImgLayout from '../assets/images/supermarket.jpg'\nimport './StoreLayOut.css'\nimport BeverageModule from './BeverageModules/BeverageModule'\nimport VegetableMoudle from './VegtableMoudules/VegtableMoudle'\nimport CartRoutes from './cart/CartRoutes'\nimport CartRoutesAuto from './cart/CartRoutesAuto'\nimport CenteredModal from '../assets/UiKit/premade_componenets/Modals/VerticalModal'\nimport product from '.././data/products.json'\nimport { useGlobalState } from '.././GlobalContext';\n//create basic TS component\nexport default function StoreLayOut() {\n    const {customerControlState, setCustomerControlState} = useGlobalState();\n    const [isModelOpen, setIsModelOpen] = useState(false)\n    const [whitchModule, setWhitchModule] = useState('')\n    function handleModal(status:boolean, modulePicked?:string) {\n        setWhitchModule(modulePicked!)\n        setIsModelOpen(status)\n    }\n\n    const BeverageArray = product.bottles\n    const VegetableArray = product.vegetables\n    \n\n  return (\n    <div className={'store_layout'}>\n    <img className='store_layout_background' src={storeImgLayout} alt={\"store lay out\"} />\n\n    <button className='soft_drinks' ></button>\n    <button className='natural_drinks'></button>\n    <button className='beers'\n    onClick={() => handleModal(true, 'beers')}\n    >🧃</button>\n  <button className='vegetables'\n    onClick={() => handleModal(true, 'vegetables')}\n    >🍆</button>\n\n\n {customerControlState? <CartRoutes /> : <CartRoutesAuto />}\n    \n\n   \n   {isModelOpen?\n\n   <CenteredModal\n    show={isModelOpen}\n    onHide={() => handleModal(false, '')}\n    >\n    {whitchModule === 'vegetables' ? <VegetableMoudle VegetableArray={VegetableArray}/> : null}\n    {whitchModule === 'beers' ? <BeverageModule   bottlesArray={BeverageArray} /> : null}\n    </CenteredModal>\n    : null\n    } \n  </div>\n  )\n}\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/BeverageModules/BeverageModule.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/VegtableMoudules/VegtableMoudle.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/premade_componenets/Modals/VerticalModal.tsx",["94","95","96"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./VerticalModal.css\";\n\ninterface ModalProps {\n  show: boolean;\n  onHide: () => void;\n  children: React.ReactNode;\n}\n\n\nconst Modal: React.FC<ModalProps>= ({ show, onHide, children }) => {\n  const [isShown, setIsShown] = useState(show);\n\n  const handleHide = () => {\n    setIsShown(false);\n    \n    onHide();\n  };\n\n  return (\n    <div className={`modal ${isShown ? \"d-block\" : \"d-none\"}`}>\n      <div className=\"modal-background\" onClick={handleHide}></div>\n      <div className=\"modal-content\">{children}</div>\n    </div>\n  );\n};\n\nconst CenteredModal: React.FC<ModalProps>= ({ show, onHide, children }) => {\n  const [isShown, setIsShown] = useState(show);\n\n  const handleHide = () => {\n    setIsShown(false);\n    onHide();\n  };\n\n  return (\n    <Modal show={show} onHide={onHide}>\n      <div className=\"modal-dialog\">\n        <div className=\"modal-header\">\n          <button type=\"button\" className=\"closeBtn\" onClick={onHide}>\n            <span>&times;</span>\n          </button>\n        </div>\n        <div className=\"modal-body\">{children}</div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default CenteredModal;\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/Line/Line.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/CartPickup.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutesAuto.tsx",["97"],[],"import React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \"./Customers/Customer\";\nimport Boundary from \"./Map/Boundary\";\nimport CartPickup from \"./Map/CartPickup\";\nimport Cameras from \"./Map/Cameras\";\nimport routes from \"./Map/routes.json\";\nimport { useGlobalState } from \"../../GlobalContext\";\n\n\ninterface RoutesProps {}\n\nconst CartRoutesAuto: React.FC<RoutesProps> = () => {\n  const {camerasControlState} = useGlobalState();\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const boundaries = useMemo(() => {\n    const boundaries: Boundary[] = [];\n    return boundaries;\n  }, []);\n  const cartPickup = useMemo(() => {\n    const cartPickup: CartPickup[] = [];\n    return cartPickup;\n  }, []);\n  const cameras = useMemo(() => {\n    const cameras: Cameras[] = [];\n    return cameras;\n  }, []);\n\n  const customer = useMemo(() => {\n    const customer: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer;\n  }, []);\n\n  const customer2 = useMemo(() => {\n    const customer2: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer2;\n  }, []);\n\n  const customer3 = useMemo(() => {\n    const customer3: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer3;\n  }, []);\n\n  const customer4 = useMemo(() => {\n    const customer4: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer4;\n  }, []);\nconst customer5 =useMemo(() => {\n  const customer5: Customer = new Customer(\n    {\n      x: Boundary.width + Boundary.width / 2,\n      y: Boundary.height + Boundary.height / 2,\n    },\n    { x: 0, y: 0}\n  );\n  return customer5;\n}, []);\n\n\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas!.getContext(\"2d\");\n    let customerArr= [customer\n      ,customer2,customer3,customer4,customer5\n    ]\n    canvas!.height = 470;\n    canvas!.width = 600;\n    boundaries.forEach((boundary) => {\n      boundary.draw(ctx);\n    });\n    cartPickup.forEach((cartPick) => {\n      cartPick.draw(ctx);\n    });\n    cameras.forEach((camera) => {\n      camera.draw(ctx);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n    \n      customerArr.forEach(c => {\n      boundaries.forEach((boundary) => {\n        boundary.draw(ctx);\n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            boundary.position.y + boundary.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            boundary.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            boundary.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            boundary.position.x + boundary.width\n        ) {\n          c.velocity.x = 0;\n          c.velocity.y = 0;\n        }\n        \n      });\n      cartPickup.forEach((cartPick) => {\n        cartPick.draw(ctx);\n        \n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            cartPick.position.y + cartPick.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            cartPick.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            cartPick.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            cartPick.position.x + cartPick.width\n        ) {\n          c.pullCart();\n        }\n      });\n      cameras.forEach((camera) => {\n        camera.draw(ctx);\n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            camera.position.y + camera.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            camera.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            camera.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            camera.position.x + camera.width\n        ) {\n          camera.focusCamera(ctx,true);\n        }\n\n      });\n      c.update(ctx); \n       \n    })\n    }\n    animate();\n  });\n\n\nfunction moveCustomer(steps: any[], index: number, c: Customer) {\n  if (index < steps.length) {\n    let step = steps[index];\n    \n    if (step.direction === \"right\") {\n      c.moveRight();\n    } else if (step.direction === \"left\") {\n      c.moveLeft();\n    } else if (step.direction === \"up\") {\n      c.moveUp();\n    } else if (step.direction === \"down\") {\n      c.moveDown();\n    } else if (step.direction === \"stop\") {\n      c.stopMovingHorizontal();\n      c.stopMovingVertical();\n    } else if (step.direction === \"end\") {\n      c.stopMovingHorizontal();\n      c.stopMovingVertical();\n      return;\n    }\n    \n    setTimeout(() => {\n      moveCustomer(steps, index + 1, c);\n    }, step.time - (index === 0 ? 0 : steps[index - 1].time));\n  }\n}\n\n\n\nconst stepsArr = Object.entries(routes);\n\n\n  moveCustomer(stepsArr[0][1][0], 0, customer2);\n  moveCustomer(stepsArr[0][1][1], 0, customer3);\n  moveCustomer(stepsArr[0][1][2], 0, customer4);\n  moveCustomer(stepsArr[0][1][3], 0, customer5);\n  moveCustomer(stepsArr[0][1][4], 0, customer);\n\n  const map = [\n    [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \"-\",\"-\",\"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\",  \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"\", \"\",\"\", \"\", \" \", \" \", \"\", \"\",\"\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"\",\"\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  ];\n\n\n  map.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(\n            new Boundary({\n              x: Boundary.width * j,\n              y: Boundary.height * i,\n            })\n          );\n          break;\n        case \"+\" :\n          cartPickup.push(\n            new CartPickup({\n              x: CartPickup.width * j,\n              y: CartPickup.height * i,\n            })\n          );\n          break;\n      \n        case \"x\" :\n          if (camerasControlState === false) {\n            break;\n            \n          } else {\n          cameras.push(\n            new Cameras({\n              x: Cameras.width * j,\n              y: Cameras.height * i,\n            })\n          );\n          }\n          break;\n      }\n    });\n  });\n\n\n  return <canvas className=\"canvas\" ref={canvasRef}></canvas>\n};\n\n\nexport default CartRoutesAuto;\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Map/Cameras.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/DashBoard.tsx",["98","99","100","101"],[],"import React from 'react'\nimport { useState } from 'react'\nimport './DashBoard.scss'\nimport {Grid} from '../assets/UiKit/grid/Gird'\nimport {Line,Rows} from '../assets/UiKit/Line/Line'\nimport { useGlobalState } from '.././GlobalContext';\n//create basic TS component\nexport default function DashBoard() {\n  \nconst {\n  setCustomerControlState,\n  customerControlState,\n  camerasControlState, \n  setCamerasControlState\n} = useGlobalState();\n\n\nfunction handleCustomerControlState (pick:boolean)  {\n  setCustomerControlState(pick)\n}\nfunction handleCamerasControlState (pick:boolean)  {\n  setCamerasControlState(pick)\n}\n\n\n\n  return (\n    <div className={'dash_container '}>\n    <Grid >\n    <Line addClass='customer_movement_container btn_dash_container'>\n    <button \n    onClick={()=>{\n      handleCustomerControlState(true)\n    }\n    }\n    className={'manual_Movement btn_dash'}>customer manual</button>\n    <button \n       onClick={()=>{\n        handleCustomerControlState(false)\n      }\n      }\n      className={'auto_movement btn_dash'}>customer auto</button>\n    </Line>\n    <Line addClass='camera_on_off btn_dash_container'>\n    <button \n    onClick={()=>{\n      handleCamerasControlState(true)\n    }\n    }\n    className={'camera_on btn_dash'}>camera on</button>\n    <button\n    onClick={()=>{\n      handleCamerasControlState(false)\n    }\n    }\n    className={'camera_off btn_dash'}>camera off</button>\n    </Line>\n   </Grid>\n  </div>\n  )\n}\n","/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/assets/UiKit/grid/Gird.tsx",[],[],"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/GlobalContext.tsx",[],[],{"ruleId":"102","severity":1,"message":"103","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":18},{"ruleId":"102","severity":1,"message":"106","line":6,"column":10,"nodeType":"104","messageId":"105","endLine":6,"endColumn":24},{"ruleId":"102","severity":1,"message":"107","line":23,"column":21,"nodeType":"104","messageId":"105","endLine":23,"endColumn":33},{"ruleId":"108","severity":1,"message":"109","line":121,"column":6,"nodeType":"110","endLine":122,"endColumn":4,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":134,"column":10,"nodeType":"104","messageId":"105","endLine":134,"endColumn":22},{"ruleId":"102","severity":1,"message":"113","line":14,"column":34,"nodeType":"104","messageId":"105","endLine":14,"endColumn":57},{"ruleId":"102","severity":1,"message":"114","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"115","line":29,"column":10,"nodeType":"104","messageId":"105","endLine":29,"endColumn":17},{"ruleId":"102","severity":1,"message":"116","line":31,"column":9,"nodeType":"104","messageId":"105","endLine":31,"endColumn":19},{"ruleId":"102","severity":1,"message":"117","line":1,"column":36,"nodeType":"104","messageId":"105","endLine":1,"endColumn":44},{"ruleId":"102","severity":1,"message":"117","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":18},{"ruleId":"102","severity":1,"message":"118","line":5,"column":14,"nodeType":"104","messageId":"105","endLine":5,"endColumn":18},{"ruleId":"102","severity":1,"message":"119","line":12,"column":3,"nodeType":"104","messageId":"105","endLine":12,"endColumn":23},{"ruleId":"102","severity":1,"message":"120","line":13,"column":3,"nodeType":"104","messageId":"105","endLine":13,"endColumn":22},"@typescript-eslint/no-unused-vars","'CartRoutes' is defined but never used.","Identifier","unusedVar","'useGlobalState' is defined but never used.","'setRecording' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'boundaries', 'cameras', 'cartPickup', and 'customer'. Either include them or remove the dependency array.","ArrayExpression",["121"],"'moveCustomer' is defined but never used.","'setCustomerControlState' is assigned a value but never used.","'useEffect' is defined but never used.","'isShown' is assigned a value but never used.","'handleHide' is assigned a value but never used.","'useState' is defined but never used.","'Rows' is defined but never used.","'customerControlState' is assigned a value but never used.","'camerasControlState' is assigned a value but never used.",{"desc":"122","fix":"123"},"Update the dependencies array to be: [boundaries, cameras, cartPickup, customer]",{"range":"124","text":"125"},[3861,3866],"[boundaries, cameras, cartPickup, customer]"]