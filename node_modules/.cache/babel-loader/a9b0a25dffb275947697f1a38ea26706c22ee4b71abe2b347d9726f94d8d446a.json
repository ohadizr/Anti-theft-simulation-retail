{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \".././cart/Customers/Customer\";\nimport Boundary from \".././cart/Map/Boundary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartRoutes = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const boundaries = useMemo(() => {\n    const boundaries = [];\n    return boundaries;\n  }, []);\n  const customer = useMemo(() => {\n    const customer = new Customer({\n      x: Boundary.width + Boundary.width / 2,\n      y: Boundary.height + Boundary.height / 2\n    }, {\n      x: 0,\n      y: 0\n    });\n    return customer;\n  }, []);\n  const canvas = canvasRef.current;\n  const ctx = canvas.getContext(\"2d\");\n  useEffect(() => {\n\n    // canvas!.height = 400;\n    // canvas!.width = 400;\n    // boundaries.forEach((boundary) => {\n    //   boundary.draw(ctx);\n\n    // });\n    // customer.draw(ctx);\n    // function animate() {\n    //   requestAnimationFrame(animate);\n    //   ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n    //   boundaries.forEach((boundary) => {\n    //     boundary.draw(ctx);\n    //   }\n    //   );\n    //   customer.update();\n\n    // }\n    // animate();\n  }, [boundaries]);\n  const miniMap = [[\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \" \", \"-\", \"-\", \" \", \"-\"], [\"-\", \" \", \" \", \" \", \" \", \"-\"], [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"]];\n  miniMap.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(new Boundary({\n            x: Boundary.width * j,\n            y: Boundary.height * i\n          }));\n          break;\n      }\n    });\n\n    // const keys = {\n    //   w: {pressed: false}\n    // },{\n    //   a: {pressed: false}\n    // },{\n    //   s: {pressed: false}\n    // },{\n    //   d: {pressed: false}\n    // }\n\n    //   document.addEventListener(\"keydown\", ({ key }) => {\n    //     switch (key) {\n    //       case \"w\":\n    //         keys.w.pressed = true;\n    //         break;\n    //       case \"a\":\n    //         keys.a.pressed = true;\n    //         break;\n    //       case \"s\":\n    //         keys.s.pressed = true;\n    //         break;\n    //       case \"d\":\n    //         keys.d.pressed = true;\n    //         break;\n    //     }\n    //   });\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    className: \"canvas\",\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n};\n_s(CartRoutes, \"4hApxi8tlcu/y6+K640Uo+NhXls=\");\n_c = CartRoutes;\nexport default CartRoutes;\nvar _c;\n$RefreshReg$(_c, \"CartRoutes\");","map":{"version":3,"names":["React","useRef","useEffect","useMemo","Customer","Boundary","jsxDEV","_jsxDEV","CartRoutes","_s","canvasRef","boundaries","customer","x","width","y","height","canvas","current","ctx","getContext","miniMap","forEach","row","i","symbol","j","push","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutes.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport  Customer  from \".././cart/Customers/Customer\";\nimport Boundary from \".././cart/Map/Boundary\";\n\ninterface RoutesProps {}\nconst CartRoutes: React.FC<RoutesProps> = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const boundaries = useMemo(() => {\n    const boundaries: Boundary[] = [];\n    return boundaries;\n  }, []);\n  const customer = useMemo(() => {\n    const customer: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer;\n  }, []);\n  const canvas = canvasRef.current;\n  const ctx = canvas!.getContext(\"2d\");\n  useEffect(() => {\n\n    // canvas!.height = 400;\n    // canvas!.width = 400;\n    // boundaries.forEach((boundary) => {\n    //   boundary.draw(ctx);\n\n    // });\n    // customer.draw(ctx);\n    // function animate() {\n    //   requestAnimationFrame(animate);\n    //   ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n    //   boundaries.forEach((boundary) => {\n    //     boundary.draw(ctx);\n    //   }\n    //   );\n    //   customer.update();\n\n      \n      \n    // }\n    // animate();\n\n  }, [boundaries]);\n\n  const miniMap = [\n    [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"],\n    [\"-\", \" \", \" \", \" \", \" \", \"-\"],\n    [\"-\", \" \", \"-\", \"-\", \" \", \"-\"],\n    [\"-\", \" \", \" \", \" \", \" \", \"-\"],\n    [\"-\", \"-\", \"-\", \"-\", \"-\", \"-\"],\n  ];\n\n  miniMap.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(\n            new Boundary({\n              x: Boundary.width * j,\n              y: Boundary.height * i,\n            })\n          );\n          break;\n      }\n    });\n\n    // const keys = {\n    //   w: {pressed: false}\n    // },{\n    //   a: {pressed: false}\n    // },{\n    //   s: {pressed: false}\n    // },{\n    //   d: {pressed: false}\n    // }\n\n    \n  //   document.addEventListener(\"keydown\", ({ key }) => {\n  //     switch (key) {\n  //       case \"w\":\n  //         keys.w.pressed = true;\n  //         break;\n  //       case \"a\":\n  //         keys.a.pressed = true;\n  //         break;\n  //       case \"s\":\n  //         keys.s.pressed = true;\n  //         break;\n  //       case \"d\":\n  //         keys.d.pressed = true;\n  //         break;\n  //     }\n  //   });\n  });\n  \n  return <canvas className=\"canvas\" ref={canvasRef}></canvas>;\n};\n\nexport default CartRoutes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAYC,OAAO,QAAQ,OAAO,CAAC,CAAC;AACrE,OAAO,mBAAmB;AAC1B,OAAQC,QAAQ,MAAO,8BAA8B;AACrD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG9C,MAAMC,UAAiC,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9C,MAAMC,SAAS,GAAGT,MAAM,CAAoB,IAAI,CAAC;EAEjD,MAAMU,UAAU,GAAGR,OAAO,CAAC,MAAM;IAC/B,MAAMQ,UAAsB,GAAG,EAAE;IACjC,OAAOA,UAAU;EACnB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMC,QAAQ,GAAGT,OAAO,CAAC,MAAM;IAC7B,MAAMS,QAAkB,GAAG,IAAIR,QAAQ,CACrC;MACES,CAAC,EAAER,QAAQ,CAACS,KAAK,GAAGT,QAAQ,CAACS,KAAK,GAAG,CAAC;MACtCC,CAAC,EAAEV,QAAQ,CAACW,MAAM,GAAGX,QAAQ,CAACW,MAAM,GAAG;IACzC,CAAC,EACD;MAAEH,CAAC,EAAE,CAAC;MAAEE,CAAC,EAAE;IAAE,CAAC,CACf;IACD,OAAOH,QAAQ;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMK,MAAM,GAAGP,SAAS,CAACQ,OAAO;EAChC,MAAMC,GAAG,GAAGF,MAAM,CAAEG,UAAU,CAAC,IAAI,CAAC;EACpClB,SAAS,CAAC,MAAM;;IAEd;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAIA;IACA;EAAA,CAED,EAAE,CAACS,UAAU,CAAC,CAAC;EAEhB,MAAMU,OAAO,GAAG,CACd,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAC9B,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAC/B;EAEDA,OAAO,CAACC,OAAO,CAAC,CAACC,GAAG,EAAEC,CAAC,KAAK;IAC1BD,GAAG,CAACD,OAAO,CAAC,CAACG,MAAM,EAAEC,CAAC,KAAK;MACzB,QAAQD,MAAM;QACZ,KAAK,GAAG;UACNd,UAAU,CAACgB,IAAI,CACb,IAAItB,QAAQ,CAAC;YACXQ,CAAC,EAAER,QAAQ,CAACS,KAAK,GAAGY,CAAC;YACrBX,CAAC,EAAEV,QAAQ,CAACW,MAAM,GAAGQ;UACvB,CAAC,CAAC,CACH;UACD;MAAM;IAEZ,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACA,CAAC,CAAC;;EAEF,oBAAOjB,OAAA;IAAQqB,SAAS,EAAC,QAAQ;IAACC,GAAG,EAAEnB;EAAU;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AAC7D,CAAC;AAACxB,EAAA,CAhGID,UAAiC;AAAA0B,EAAA,GAAjC1B,UAAiC;AAkGvC,eAAeA,UAAU;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}