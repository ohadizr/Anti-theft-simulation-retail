{"ast":null,"code":"export default class Customer {\n  constructor(position, velocity) {\n    let radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    let onStart = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n    let useCart = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let startTime = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    let currentIndex = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n    this.position = position;\n    this.velocity = velocity;\n    this.radius = radius;\n    this.onStart = onStart;\n    this.useCart = useCart;\n    this.startTime = startTime;\n    this.currentIndex = currentIndex;\n    this.draw = ctx => {\n      ctx.beginPath();\n      if (this.onStart) {\n        this.position.x = 20;\n        this.position.y = 320;\n        this.onStart = false;\n      }\n      ctx.arc(this.position.x, this.position.y, this.radius, 0, Math.PI * 2);\n      ctx.fillStyle = \"blue\";\n      ctx.fill();\n      ctx.closePath();\n    };\n    this.pullCart = () => {\n      this.useCart = true;\n      this.radius = 15;\n    };\n    this.position = position;\n    this.velocity = velocity;\n    this.radius = 10;\n    this.onStart = true;\n    this.useCart = false;\n    this.movements = [];\n    this.startTime = 0;\n    this.currentIndex = 0;\n  }\n  moveUp() {\n    this.velocity.y = -1;\n    // this.movementRecording();\n  }\n\n  moveDown() {\n    this.velocity.y = 1;\n    // this.movementRecording();\n  }\n\n  moveLeft() {\n    this.velocity.x = -1;\n    // this.movementRecording();\n  }\n\n  moveRight() {\n    this.velocity.x = 1;\n    // this.movementRecording();\n  }\n\n  stopMovingVertical() {\n    this.velocity.y = 0;\n    // this.movementRecording();\n  }\n\n  stopMovingHorizontal() {\n    this.velocity.x = 0;\n    // this.movementRecording();\n  }\n\n  autoMovement() {\n    //   { \"direction\": \"left\",  \"time\": 1681837835952 } create movment from object \n\n    if (this.movements.length > 0) {\n      if (this.currentIndex < this.movements.length) {\n        const movement = this.movements[this.currentIndex];\n        const currentTime = Date.now();\n        if (currentTime - this.startTime > movement.time) {\n          this.currentIndex++;\n          this.startTime = currentTime;\n          this.position.x += movement.direction.x;\n          this.position.y += movement.direction.y;\n        }\n      }\n    }\n    //\n    //   moveUp() {\n    //     this.velocity.y = -2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveDown() {\n    //     this.velocity.y = 2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveLeft() {\n    //     this.velocity.x = -2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveRight() {\n    //     this.velocity.x = 2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n  }\n\n  update(ctx) {\n    this.draw(ctx);\n    this.position.x += this.velocity.x;\n    this.position.y += this.velocity.y;\n  }\n}\nCustomer.radius = 10;","map":{"version":3,"names":["Customer","constructor","position","velocity","radius","arguments","length","undefined","onStart","useCart","startTime","currentIndex","draw","ctx","beginPath","x","y","arc","Math","PI","fillStyle","fill","closePath","pullCart","movements","moveUp","moveDown","moveLeft","moveRight","stopMovingVertical","stopMovingHorizontal","autoMovement","movement","currentTime","Date","now","time","direction","update"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/Customers/Customer.tsx"],"sourcesContent":["type Velocity = {\n    x: number;\n    y: number;\n  };\n  type Position = {\n    x: number;\n    y: number;\n  };\n\nexport default   class Customer {\n    constructor(\n      public position: Position,\n      public velocity: Velocity,\n      public radius: number = 10,\n      public onStart: boolean = true,\n      public useCart: boolean = false,\n      public startTime: number = 0,\n      public currentIndex: number = 0\n    ) {\n      this.position = position;\n      this.velocity = velocity;\n      this.radius = 10;\n      this.onStart = true;\n      this.useCart = false;\n      this.movements = [];\n      this.startTime = 0;\n      this.currentIndex = 0;\n    }\n    static radius = 10;\n\n    moveUp() {\n      this.velocity.y = -1;\n      // this.movementRecording();\n    }\n    moveDown() {\n      this.velocity.y = 1;\n      // this.movementRecording();\n    }\n    moveLeft() {\n      this.velocity.x = -1;\n      // this.movementRecording();\n    }\n    moveRight() {\n      this.velocity.x = 1;\n      // this.movementRecording();\n    }\n    stopMovingVertical() {\n      this.velocity.y = 0;\n      // this.movementRecording();\n    }\n    stopMovingHorizontal() {\n      this.velocity.x = 0;\n      // this.movementRecording();\n    }\n\n\n    autoMovement() {\n      //   { \"direction\": \"left\",  \"time\": 1681837835952 } create movment from object \n      \n        if (this.movements.length > 0) {\n          if (this.currentIndex < this.movements.length) {\n            const movement = this.movements[this.currentIndex];\n            const currentTime = Date.now();\n            if (currentTime - this.startTime > movement.time) {\n              this.currentIndex++;\n              this.startTime = currentTime;\n              this.position.x += movement.direction.x;\n              this.position.y += movement.direction.y;\n            }\n          }\n        }\n      //\n    //   moveUp() {\n    //     this.velocity.y = -2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveDown() {\n    //     this.velocity.y = 2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveLeft() {\n    //     this.velocity.x = -2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    //   moveRight() {\n    //     this.velocity.x = 2;\n    //     recordMovement(this.movements, this.position, this.startTime);\n    //   }\n    }\n\n\n    draw = (ctx: CanvasRenderingContext2D | null) => {\n      ctx!.beginPath();\n      if (this.onStart) {\n        this.position.x = 20;\n        this.position.y = 320;\n        this.onStart = false;\n      }\n      ctx!.arc(\n        this.position.x,\n        this.position.y,\n        this.radius,\n        0,\n        Math.PI * 2\n      )\n      ctx!.fillStyle = \"blue\";\n      ctx!.fill();\n      ctx!.closePath();\n      \n    };\n    update(ctx: CanvasRenderingContext2D | null) {\n      this.draw(ctx);\n      this.position.x += this.velocity.x;  \n      this.position.y += this.velocity.y;\n    }\n\n    pullCart = () => {\n      this.useCart = true;\n      this.radius = 15;\n      \n      }\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}