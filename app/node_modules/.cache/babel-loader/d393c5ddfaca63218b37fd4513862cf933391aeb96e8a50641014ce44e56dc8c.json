{"ast":null,"code":"import React,{useRef,useEffect,useMemo}from\"react\";// Importing useRef and useEffect hooks\nimport\"./CartRoutes.scss\";import Customer from\"./Customers/Customer\";import Boundary from\"./Map/Boundary\";import CartPickup from\"./Map/CartPickup\";import Cameras from\"./Map/Cameras\";import routes from\"./Map/routes.json\";import{useGlobalState}from\"../../GlobalContext\";import{jsx as _jsx}from\"react/jsx-runtime\";var CartRoutesAuto=function CartRoutesAuto(){var _useGlobalState=useGlobalState(),camerasControlState=_useGlobalState.camerasControlState;var canvasRef=useRef(null);var boundaries=useMemo(function(){var boundaries=[];return boundaries;},[]);var cartPickup=useMemo(function(){var cartPickup=[];return cartPickup;},[]);var cameras=useMemo(function(){var cameras=[];return cameras;},[]);var customer=useMemo(function(){var customer=new Customer({x:Boundary.width+Boundary.width/2,y:Boundary.height+Boundary.height/2},{x:0,y:0});return customer;},[]);var customer2=useMemo(function(){var customer2=new Customer({x:Boundary.width+Boundary.width/2,y:Boundary.height+Boundary.height/2},{x:0,y:0});return customer2;},[]);var customer3=useMemo(function(){var customer3=new Customer({x:Boundary.width+Boundary.width/2,y:Boundary.height+Boundary.height/2},{x:0,y:0});return customer3;},[]);var customer4=useMemo(function(){var customer4=new Customer({x:Boundary.width+Boundary.width/2,y:Boundary.height+Boundary.height/2},{x:0,y:0});return customer4;},[]);var customer5=useMemo(function(){var customer5=new Customer({x:Boundary.width+Boundary.width/2,y:Boundary.height+Boundary.height/2},{x:0,y:0});return customer5;},[]);useEffect(function(){var canvas=canvasRef.current;var ctx=canvas.getContext(\"2d\");var customerArr=[customer,customer2,customer3,customer4,customer5];canvas.height=470;canvas.width=600;boundaries.forEach(function(boundary){boundary.draw(ctx);});cartPickup.forEach(function(cartPick){cartPick.draw(ctx);});cameras.forEach(function(camera){camera.draw(ctx);});function animate(){requestAnimationFrame(animate);ctx.clearRect(0,0,canvas.width,canvas.height);customerArr.forEach(function(c){boundaries.forEach(function(boundary){boundary.draw(ctx);if(c.position.y-c.radius+3+c.velocity.y<=boundary.position.y+boundary.height&&c.position.x+c.radius-5+c.velocity.x>=boundary.position.x&&c.position.y+c.radius-3+c.velocity.y>=boundary.position.y&&c.position.x+c.radius-15+c.velocity.x<=boundary.position.x+boundary.width){c.velocity.x=0;c.velocity.y=0;}});cartPickup.forEach(function(cartPick){cartPick.draw(ctx);if(c.position.y-c.radius+3+c.velocity.y<=cartPick.position.y+cartPick.height&&c.position.x+c.radius-5+c.velocity.x>=cartPick.position.x&&c.position.y+c.radius-3+c.velocity.y>=cartPick.position.y&&c.position.x+c.radius-15+c.velocity.x<=cartPick.position.x+cartPick.width){c.pullCart();}});cameras.forEach(function(camera){camera.draw(ctx);if(c.position.y-c.radius+3+c.velocity.y<=camera.position.y+camera.height&&c.position.x+c.radius-5+c.velocity.x>=camera.position.x&&c.position.y+c.radius-3+c.velocity.y>=camera.position.y&&c.position.x+c.radius-15+c.velocity.x<=camera.position.x+camera.width){camera.focusCamera(ctx,true);}});c.update(ctx);});}animate();});function moveCustomer(steps,index,c){if(index<steps.length){var step=steps[index];if(step.direction===\"right\"){c.moveRight();}else if(step.direction===\"left\"){c.moveLeft();}else if(step.direction===\"up\"){c.moveUp();}else if(step.direction===\"down\"){c.moveDown();}else if(step.direction===\"stop\"){c.stopMovingHorizontal();c.stopMovingVertical();}else if(step.direction===\"end\"){c.stopMovingHorizontal();c.stopMovingVertical();return;}setTimeout(function(){moveCustomer(steps,index+1,c);},step.time-(index===0?0:steps[index-1].time));}}var stepsArr=Object.entries(routes);moveCustomer(stepsArr[0][1][0],0,customer2);moveCustomer(stepsArr[0][1][1],0,customer3);moveCustomer(stepsArr[0][1][2],0,customer4);moveCustomer(stepsArr[0][1][3],0,customer5);moveCustomer(stepsArr[0][1][4],0,customer);var mapx\",\"x\",\"x\",\" \",\" \",\"-\",\"-\",\"-\",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\" \",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"x\",\"x\",\"xx\",\" \",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"-\",\"-\",\"-\",\" \",\" \",\"+\",\"-\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"-\",\"-\",\"-\",\" \",\" \",\"+\",\"-\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"-\",\"-\",\"-\",\" \",\" \",\"\",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\" \",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"-\",\"-\",\"-\",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"x\",\"x\",\"x\",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\" \",\" \",\"x\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"x\",\"x\",\"x\",\" \",\" \",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"-\",\"-\",\"-\",\"-\",\" \",\"x\",\"-\",\"-\",\"-\",\" \",\" \",\" \",\"x\",\"-\",\"-\",\"-\",\"-\",\"-\",\"-\"],[\"-\",\"-\",\"-\",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\" \",\"\",\" \",\" \",\" \",\" \",\" \",\"xmap.forEach(function(row,i){row.forEach(function(symbol,j){switch(symbol){case\"-\":boundaries.push(new Boundary({x:Boundary.width*j,y:Boundary.height*i}));break;case\"+\":cartPickup.push(new CartPickup({x:CartPickup.width*j,y:CartPickup.height*i}));break;case\"x\":if(camerasControlState===false){break;}else{cameras.push(new Cameras({x:Cameras.width*j,y:Cameras.height*i}));}break;}});});return/*#__PURE__*/_jsx(\"canvas\",{className:\"canvas\",ref:canvasRef});};export default CartRoutesAuto;","map":{"version":3,"names":["React","useRef","useEffect","useMemo","Customer","Boundary","CartPickup","Cameras","routes","useGlobalState","jsx","_jsx","CartRoutesAuto","_useGlobalState","camerasControlState","canvasRef","boundaries","cartPickup","cameras","customer","x","width","y","height","customer2","customer3","customer4","customer5","canvas","current","ctx","getContext","customerArr","forEach","boundary","draw","cartPick","camera","animate","requestAnimationFrame","clearRect","c","position","radius","velocity","pullCart","focusCamera","update","moveCustomer","steps","index","length","step","direction","moveRight","moveLeft","moveUp","moveDown","stopMovingHorizontal","stopMovingVertical","setTimeout","time","stepsArr","Object","entries","map","row","i","symbol","j","push","className","ref"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/supermarket/app/src/components/cart/CartRoutesAuto.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \"./Customers/Customer\";\nimport Boundary from \"./Map/Boundary\";\nimport CartPickup from \"./Map/CartPickup\";\nimport Cameras from \"./Map/Cameras\";\nimport routes from \"./Map/routes.json\";\nimport { useGlobalState } from \"../../GlobalContext\";\n\n\ninterface RoutesProps {}\n\nconst CartRoutesAuto: React.FC<RoutesProps> = () => {\n  const {camerasControlState} = useGlobalState();\n\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const boundaries = useMemo(() => {\n    const boundaries: Boundary[] = [];\n    return boundaries;\n  }, []);\n  const cartPickup = useMemo(() => {\n    const cartPickup: CartPickup[] = [];\n    return cartPickup;\n  }, []);\n  const cameras = useMemo(() => {\n    const cameras: Cameras[] = [];\n    return cameras;\n  }, []);\n\n  const customer = useMemo(() => {\n    const customer: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer;\n  }, []);\n\n  const customer2 = useMemo(() => {\n    const customer2: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer2;\n  }, []);\n\n  const customer3 = useMemo(() => {\n    const customer3: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer3;\n  }, []);\n\n  const customer4 = useMemo(() => {\n    const customer4: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer4;\n  }, []);\nconst customer5 =useMemo(() => {\n  const customer5: Customer = new Customer(\n    {\n      x: Boundary.width + Boundary.width / 2,\n      y: Boundary.height + Boundary.height / 2,\n    },\n    { x: 0, y: 0}\n  );\n  return customer5;\n}, []);\n\n\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas!.getContext(\"2d\");\n    let customerArr= [customer\n      ,customer2,customer3,customer4,customer5\n    ]\n    canvas!.height = 470;\n    canvas!.width = 600;\n    boundaries.forEach((boundary) => {\n      boundary.draw(ctx);\n    });\n    cartPickup.forEach((cartPick) => {\n      cartPick.draw(ctx);\n    });\n    cameras.forEach((camera) => {\n      camera.draw(ctx);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n    \n      customerArr.forEach(c => {\n      boundaries.forEach((boundary) => {\n        boundary.draw(ctx);\n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            boundary.position.y + boundary.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            boundary.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            boundary.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            boundary.position.x + boundary.width\n        ) {\n          c.velocity.x = 0;\n          c.velocity.y = 0;\n        }\n        \n      });\n      cartPickup.forEach((cartPick) => {\n        cartPick.draw(ctx);\n        \n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            cartPick.position.y + cartPick.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            cartPick.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            cartPick.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            cartPick.position.x + cartPick.width\n        ) {\n          c.pullCart();\n        }\n      });\n      cameras.forEach((camera) => {\n        camera.draw(ctx);\n        if (\n          c.position.y - c.radius +3+ c.velocity.y <=\n            camera.position.y + camera.height &&\n          c.position.x + c.radius -5 + c.velocity.x >=\n            camera.position.x &&\n          c.position.y + c.radius -3 + c.velocity.y >=\n            camera.position.y &&\n          c.position.x + c.radius -15 + c.velocity.x <=\n            camera.position.x + camera.width\n        ) {\n          camera.focusCamera(ctx,true);\n        }\n\n      });\n      c.update(ctx); \n       \n    })\n    }\n    animate();\n  });\n\n\nfunction moveCustomer(steps: any[], index: number, c: Customer) {\n  if (index < steps.length) {\n    let step = steps[index];\n    \n    if (step.direction === \"right\") {\n      c.moveRight();\n    } else if (step.direction === \"left\") {\n      c.moveLeft();\n    } else if (step.direction === \"up\") {\n      c.moveUp();\n    } else if (step.direction === \"down\") {\n      c.moveDown();\n    } else if (step.direction === \"stop\") {\n      c.stopMovingHorizontal();\n      c.stopMovingVertical();\n    } else if (step.direction === \"end\") {\n      c.stopMovingHorizontal();\n      c.stopMovingVertical();\n      return;\n    }\n    \n    setTimeout(() => {\n      moveCustomer(steps, index + 1, c);\n    }, step.time - (index === 0 ? 0 : steps[index - 1].time));\n  }\n}\n\n\n\nconst stepsArr = Object.entries(routes);\n\n\n  moveCustomer(stepsArr[0][1][0], 0, customer2);\n  moveCustomer(stepsArr[0][1][1], 0, customer3);\n  moveCustomer(stepsArr[0][1][2], 0, customer4);\n  moveCustomer(stepsArr[0][1][3], 0, customer5);\n  moveCustomer(stepsArr[0][1][4], 0, customer);\n\n  const map = [\n    [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \"-\",\"-\",\"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\",  \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"\", \"\",\"\", \"\", \" \", \" \", \"\", \"\",\"\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"\",\"\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"x\", \"x\", \"x\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"x\", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \"x\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n    [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  ];\n\n\n  map.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(\n            new Boundary({\n              x: Boundary.width * j,\n              y: Boundary.height * i,\n            })\n          );\n          break;\n        case \"+\" :\n          cartPickup.push(\n            new CartPickup({\n              x: CartPickup.width * j,\n              y: CartPickup.height * i,\n            })\n          );\n          break;\n      \n        case \"x\" :\n          if (camerasControlState === false) {\n            break;\n            \n          } else {\n          cameras.push(\n            new Cameras({\n              x: Cameras.width * j,\n              y: Cameras.height * i,\n            })\n          );\n          }\n          break;\n      }\n    });\n  });\n\n\n  return <canvas className=\"canvas\" ref={canvasRef}></canvas>\n};\n\n\nexport default CartRoutesAuto;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,SAAS,CAAYC,OAAO,KAAQ,OAAO,CAAE;AACrE,MAAO,mBAAmB,CAC1B,MAAO,CAAAC,QAAQ,KAAM,sBAAsB,CAC3C,MAAO,CAAAC,QAAQ,KAAM,gBAAgB,CACrC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,MAAO,CAAAC,OAAO,KAAM,eAAe,CACnC,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,cAAc,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAKrD,GAAM,CAAAC,cAAqC,CAAG,QAAxC,CAAAA,cAAqCA,CAAA,CAAS,CAClD,IAAAC,eAAA,CAA8BJ,cAAc,EAAE,CAAvCK,mBAAmB,CAAAD,eAAA,CAAnBC,mBAAmB,CAE1B,GAAM,CAAAC,SAAS,CAAGd,MAAM,CAAoB,IAAI,CAAC,CACjD,GAAM,CAAAe,UAAU,CAAGb,OAAO,CAAC,UAAM,CAC/B,GAAM,CAAAa,UAAsB,CAAG,EAAE,CACjC,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAE,EAAE,CAAC,CACN,GAAM,CAAAC,UAAU,CAAGd,OAAO,CAAC,UAAM,CAC/B,GAAM,CAAAc,UAAwB,CAAG,EAAE,CACnC,MAAO,CAAAA,UAAU,CACnB,CAAC,CAAE,EAAE,CAAC,CACN,GAAM,CAAAC,OAAO,CAAGf,OAAO,CAAC,UAAM,CAC5B,GAAM,CAAAe,OAAkB,CAAG,EAAE,CAC7B,MAAO,CAAAA,OAAO,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,QAAQ,CAAGhB,OAAO,CAAC,UAAM,CAC7B,GAAM,CAAAgB,QAAkB,CAAG,GAAI,CAAAf,QAAQ,CACrC,CACEgB,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGhB,QAAQ,CAACgB,KAAK,CAAG,CAAC,CACtCC,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAGlB,QAAQ,CAACkB,MAAM,CAAG,CACzC,CAAC,CACD,CAAEH,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAE,CAAC,CACf,CACD,MAAO,CAAAH,QAAQ,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAK,SAAS,CAAGrB,OAAO,CAAC,UAAM,CAC9B,GAAM,CAAAqB,SAAmB,CAAG,GAAI,CAAApB,QAAQ,CACtC,CACEgB,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGhB,QAAQ,CAACgB,KAAK,CAAG,CAAC,CACtCC,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAGlB,QAAQ,CAACkB,MAAM,CAAG,CACzC,CAAC,CACD,CAAEH,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAE,CAAC,CACf,CACD,MAAO,CAAAE,SAAS,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,SAAS,CAAGtB,OAAO,CAAC,UAAM,CAC9B,GAAM,CAAAsB,SAAmB,CAAG,GAAI,CAAArB,QAAQ,CACtC,CACEgB,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGhB,QAAQ,CAACgB,KAAK,CAAG,CAAC,CACtCC,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAGlB,QAAQ,CAACkB,MAAM,CAAG,CACzC,CAAC,CACD,CAAEH,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAE,CAAC,CACf,CACD,MAAO,CAAAG,SAAS,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAC,SAAS,CAAGvB,OAAO,CAAC,UAAM,CAC9B,GAAM,CAAAuB,SAAmB,CAAG,GAAI,CAAAtB,QAAQ,CACtC,CACEgB,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGhB,QAAQ,CAACgB,KAAK,CAAG,CAAC,CACtCC,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAGlB,QAAQ,CAACkB,MAAM,CAAG,CACzC,CAAC,CACD,CAAEH,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAE,CAAC,CACf,CACD,MAAO,CAAAI,SAAS,CAClB,CAAC,CAAE,EAAE,CAAC,CACR,GAAM,CAAAC,SAAS,CAAExB,OAAO,CAAC,UAAM,CAC7B,GAAM,CAAAwB,SAAmB,CAAG,GAAI,CAAAvB,QAAQ,CACtC,CACEgB,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGhB,QAAQ,CAACgB,KAAK,CAAG,CAAC,CACtCC,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAGlB,QAAQ,CAACkB,MAAM,CAAG,CACzC,CAAC,CACD,CAAEH,CAAC,CAAE,CAAC,CAAEE,CAAC,CAAE,CAAC,CAAC,CACd,CACD,MAAO,CAAAK,SAAS,CAClB,CAAC,CAAE,EAAE,CAAC,CAIJzB,SAAS,CAAC,UAAM,CACd,GAAM,CAAA0B,MAAM,CAAGb,SAAS,CAACc,OAAO,CAChC,GAAM,CAAAC,GAAG,CAAGF,MAAM,CAAEG,UAAU,CAAC,IAAI,CAAC,CACpC,GAAI,CAAAC,WAAW,CAAE,CAACb,QAAQ,CACvBK,SAAS,CAACC,SAAS,CAACC,SAAS,CAACC,SAAS,CACzC,CACDC,MAAM,CAAEL,MAAM,CAAG,GAAG,CACpBK,MAAM,CAAEP,KAAK,CAAG,GAAG,CACnBL,UAAU,CAACiB,OAAO,CAAC,SAACC,QAAQ,CAAK,CAC/BA,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,CACpB,CAAC,CAAC,CACFb,UAAU,CAACgB,OAAO,CAAC,SAACG,QAAQ,CAAK,CAC/BA,QAAQ,CAACD,IAAI,CAACL,GAAG,CAAC,CACpB,CAAC,CAAC,CACFZ,OAAO,CAACe,OAAO,CAAC,SAACI,MAAM,CAAK,CAC1BA,MAAM,CAACF,IAAI,CAACL,GAAG,CAAC,CAClB,CAAC,CAAC,CACF,QAAS,CAAAQ,OAAOA,CAAA,CAAG,CACjBC,qBAAqB,CAACD,OAAO,CAAC,CAC9BR,GAAG,CAAEU,SAAS,CAAC,CAAC,CAAE,CAAC,CAAEZ,MAAM,CAAEP,KAAK,CAAEO,MAAM,CAAEL,MAAM,CAAC,CAEnDS,WAAW,CAACC,OAAO,CAAC,SAAAQ,CAAC,CAAI,CACzBzB,UAAU,CAACiB,OAAO,CAAC,SAACC,QAAQ,CAAK,CAC/BA,QAAQ,CAACC,IAAI,CAACL,GAAG,CAAC,CAClB,GACEW,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAEF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACtCY,QAAQ,CAACQ,QAAQ,CAACpB,CAAC,CAAGY,QAAQ,CAACX,MAAM,EACvCkB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACvCc,QAAQ,CAACQ,QAAQ,CAACtB,CAAC,EACrBqB,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACvCY,QAAQ,CAACQ,QAAQ,CAACpB,CAAC,EACrBmB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,EAAE,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACxCc,QAAQ,CAACQ,QAAQ,CAACtB,CAAC,CAAGc,QAAQ,CAACb,KAAK,CACtC,CACAoB,CAAC,CAACG,QAAQ,CAACxB,CAAC,CAAG,CAAC,CAChBqB,CAAC,CAACG,QAAQ,CAACtB,CAAC,CAAG,CAAC,CAClB,CAEF,CAAC,CAAC,CACFL,UAAU,CAACgB,OAAO,CAAC,SAACG,QAAQ,CAAK,CAC/BA,QAAQ,CAACD,IAAI,CAACL,GAAG,CAAC,CAElB,GACEW,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAEF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACtCc,QAAQ,CAACM,QAAQ,CAACpB,CAAC,CAAGc,QAAQ,CAACb,MAAM,EACvCkB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACvCgB,QAAQ,CAACM,QAAQ,CAACtB,CAAC,EACrBqB,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACvCc,QAAQ,CAACM,QAAQ,CAACpB,CAAC,EACrBmB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,EAAE,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACxCgB,QAAQ,CAACM,QAAQ,CAACtB,CAAC,CAAGgB,QAAQ,CAACf,KAAK,CACtC,CACAoB,CAAC,CAACI,QAAQ,EAAE,CACd,CACF,CAAC,CAAC,CACF3B,OAAO,CAACe,OAAO,CAAC,SAACI,MAAM,CAAK,CAC1BA,MAAM,CAACF,IAAI,CAACL,GAAG,CAAC,CAChB,GACEW,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAEF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACtCe,MAAM,CAACK,QAAQ,CAACpB,CAAC,CAAGe,MAAM,CAACd,MAAM,EACnCkB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACvCiB,MAAM,CAACK,QAAQ,CAACtB,CAAC,EACnBqB,CAAC,CAACC,QAAQ,CAACpB,CAAC,CAAGmB,CAAC,CAACE,MAAM,CAAE,CAAC,CAAGF,CAAC,CAACG,QAAQ,CAACtB,CAAC,EACvCe,MAAM,CAACK,QAAQ,CAACpB,CAAC,EACnBmB,CAAC,CAACC,QAAQ,CAACtB,CAAC,CAAGqB,CAAC,CAACE,MAAM,CAAE,EAAE,CAAGF,CAAC,CAACG,QAAQ,CAACxB,CAAC,EACxCiB,MAAM,CAACK,QAAQ,CAACtB,CAAC,CAAGiB,MAAM,CAAChB,KAAK,CAClC,CACAgB,MAAM,CAACS,WAAW,CAAChB,GAAG,CAAC,IAAI,CAAC,CAC9B,CAEF,CAAC,CAAC,CACFW,CAAC,CAACM,MAAM,CAACjB,GAAG,CAAC,CAEf,CAAC,CAAC,CACF,CACAQ,OAAO,EAAE,CACX,CAAC,CAAC,CAGJ,QAAS,CAAAU,YAAYA,CAACC,KAAY,CAAEC,KAAa,CAAET,CAAW,CAAE,CAC9D,GAAIS,KAAK,CAAGD,KAAK,CAACE,MAAM,CAAE,CACxB,GAAI,CAAAC,IAAI,CAAGH,KAAK,CAACC,KAAK,CAAC,CAEvB,GAAIE,IAAI,CAACC,SAAS,GAAK,OAAO,CAAE,CAC9BZ,CAAC,CAACa,SAAS,EAAE,CACf,CAAC,IAAM,IAAIF,IAAI,CAACC,SAAS,GAAK,MAAM,CAAE,CACpCZ,CAAC,CAACc,QAAQ,EAAE,CACd,CAAC,IAAM,IAAIH,IAAI,CAACC,SAAS,GAAK,IAAI,CAAE,CAClCZ,CAAC,CAACe,MAAM,EAAE,CACZ,CAAC,IAAM,IAAIJ,IAAI,CAACC,SAAS,GAAK,MAAM,CAAE,CACpCZ,CAAC,CAACgB,QAAQ,EAAE,CACd,CAAC,IAAM,IAAIL,IAAI,CAACC,SAAS,GAAK,MAAM,CAAE,CACpCZ,CAAC,CAACiB,oBAAoB,EAAE,CACxBjB,CAAC,CAACkB,kBAAkB,EAAE,CACxB,CAAC,IAAM,IAAIP,IAAI,CAACC,SAAS,GAAK,KAAK,CAAE,CACnCZ,CAAC,CAACiB,oBAAoB,EAAE,CACxBjB,CAAC,CAACkB,kBAAkB,EAAE,CACtB,OACF,CAEAC,UAAU,CAAC,UAAM,CACfZ,YAAY,CAACC,KAAK,CAAEC,KAAK,CAAG,CAAC,CAAET,CAAC,CAAC,CACnC,CAAC,CAAEW,IAAI,CAACS,IAAI,EAAIX,KAAK,GAAK,CAAC,CAAG,CAAC,CAAGD,KAAK,CAACC,KAAK,CAAG,CAAC,CAAC,CAACW,IAAI,CAAC,CAAC,CAC3D,CACF,CAIA,GAAM,CAAAC,QAAQ,CAAGC,MAAM,CAACC,OAAO,CAACxD,MAAM,CAAC,CAGrCwC,YAAY,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAEtC,SAAS,CAAC,CAC7CwB,YAAY,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAErC,SAAS,CAAC,CAC7CuB,YAAY,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAEpC,SAAS,CAAC,CAC7CsB,YAAY,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAEnC,SAAS,CAAC,CAC7CqB,YAAY,CAACc,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,CAAC,CAAE3C,QAAQ,CAAC,CAE5C,GAAM,CAAA8C,GAAG,CAAG,CACV,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAG,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAG,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CAClJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,EAAE,CAAC,EAAE,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACjJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CAClJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,EAAE,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CAClJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,CACnJ,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAG,CACpJ,CAGDA,GAAG,CAAChC,OAAO,CAAC,SAACiC,GAAG,CAAEC,CAAC,CAAK,CACtBD,GAAG,CAACjC,OAAO,CAAC,SAACmC,MAAM,CAAEC,CAAC,CAAK,CACzB,OAAQD,MAAM,EACZ,IAAK,GAAG,CACNpD,UAAU,CAACsD,IAAI,CACb,GAAI,CAAAjE,QAAQ,CAAC,CACXe,CAAC,CAAEf,QAAQ,CAACgB,KAAK,CAAGgD,CAAC,CACrB/C,CAAC,CAAEjB,QAAQ,CAACkB,MAAM,CAAG4C,CACvB,CAAC,CAAC,CACH,CACD,MACF,IAAK,GAAG,CACNlD,UAAU,CAACqD,IAAI,CACb,GAAI,CAAAhE,UAAU,CAAC,CACbc,CAAC,CAAEd,UAAU,CAACe,KAAK,CAAGgD,CAAC,CACvB/C,CAAC,CAAEhB,UAAU,CAACiB,MAAM,CAAG4C,CACzB,CAAC,CAAC,CACH,CACD,MAEF,IAAK,GAAG,CACN,GAAIrD,mBAAmB,GAAK,KAAK,CAAE,CACjC,MAEF,CAAC,IAAM,CACPI,OAAO,CAACoD,IAAI,CACV,GAAI,CAAA/D,OAAO,CAAC,CACVa,CAAC,CAAEb,OAAO,CAACc,KAAK,CAAGgD,CAAC,CACpB/C,CAAC,CAAEf,OAAO,CAACgB,MAAM,CAAG4C,CACtB,CAAC,CAAC,CACH,CACD,CACA,MAAM,CAEZ,CAAC,CAAC,CACJ,CAAC,CAAC,CAGF,mBAAOxD,IAAA,WAAQ4D,SAAS,CAAC,QAAQ,CAACC,GAAG,CAAEzD,SAAU,EAAU,CAC7D,CAAC,CAGD,cAAe,CAAAH,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}