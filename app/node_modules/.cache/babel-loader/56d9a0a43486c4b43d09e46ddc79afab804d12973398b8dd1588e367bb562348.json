{"ast":null,"code":"var _jsxFileName = \"/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutesAuto.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \"./Customers/Customer\";\nimport Boundary from \"./Map/Boundary\";\nimport CartPickup from \"./Map/CartPickup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartRoutesAuto = () => {\n  _s();\n  var _records;\n  const [currentDirection, setCurrentDirection] = useState(\"\");\n  const [recording, setRecording] = useState([]);\n  // let recording: recordingArray[] = [];\n  const canvasRef = useRef(null);\n  const boundaries = useMemo(() => {\n    const boundaries = [];\n    return boundaries;\n  }, []);\n  const cartPickup = useMemo(() => {\n    const cartPickup = [];\n    return cartPickup;\n  }, []);\n  const customer = useMemo(() => {\n    const customer = new Customer({\n      x: Boundary.width + Boundary.width / 2,\n      y: Boundary.height + Boundary.height / 2\n    }, {\n      x: 0,\n      y: 0\n    });\n    return customer;\n  }, []);\n  const customerTwo = useMemo(() => {\n    const customerTwo = new Customer({\n      x: Boundary.width + Boundary.width / 2,\n      y: Boundary.height + Boundary.height / 2\n    }, {\n      x: 0,\n      y: 0\n    });\n    return customerTwo;\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    canvas.height = 470;\n    canvas.width = 600;\n    boundaries.forEach(boundary => {\n      boundary.draw(ctx);\n    });\n    cartPickup.forEach(cartPick => {\n      cartPick.draw(ctx);\n    });\n    function animate() {\n      requestAnimationFrame(animate);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      boundaries.forEach(boundary => {\n        boundary.draw(ctx);\n        if (customer.position.y - customer.radius + 3 + customer.velocity.y <= boundary.position.y + boundary.height && customer.position.x + customer.radius - 5 + customer.velocity.x >= boundary.position.x && customer.position.y + customer.radius - 3 + customer.velocity.y >= boundary.position.y && customer.position.x + customer.radius - 15 + customer.velocity.x <= boundary.position.x + boundary.width) {\n          customer.velocity.x = 0;\n          customer.velocity.y = 0;\n        }\n      });\n      cartPickup.forEach(cartPick => {\n        cartPick.draw(ctx);\n        if (customer.position.y - customer.radius + 3 + customer.velocity.y <= cartPick.position.y + cartPick.height && customer.position.x + customer.radius - 5 + customer.velocity.x >= cartPick.position.x && customer.position.y + customer.radius - 3 + customer.velocity.y >= cartPick.position.y && customer.position.x + customer.radius - 15 + customer.velocity.x <= cartPick.position.x + cartPick.width) {\n          customer.pullCart();\n        }\n      });\n      customer.update(ctx);\n      customerTwo.update(ctx);\n      // console.log(currentDirection);\n    }\n\n    animate();\n  }, []);\n  let records = recording;\n  //if current direction is not the same ast the last direction of records array then push the current direction and time to the records array\n  if (currentDirection !== ((_records = records[records.length - 1]) === null || _records === void 0 ? void 0 : _records.direction)) {\n    records.push({\n      direction: currentDirection,\n      time: Date.now(),\n      y: customer.position.y,\n      x: customer.position.x\n    });\n  }\n  console.log(records);\n  function moveCustomer(steps, index, customer) {\n    if (index < steps.length) {\n      let step = steps[index];\n      if (step.direction === \"right\") {\n        customer.moveRight();\n      } else if (step.direction === \"left\") {\n        customer.moveLeft();\n      } else if (step.direction === \"up\") {\n        customer.moveUp();\n      } else if (step.direction === \"down\") {\n        customer.moveDown();\n      } else if (step.direction === \"stop\") {\n        customer.stopMovingHorizontal();\n        customer.stopMovingVertical();\n      } else if (step.direction === \"end\") {\n        customer.stopMovingHorizontal();\n        customer.stopMovingVertical();\n        return;\n      }\n      setTimeout(() => {\n        moveCustomer(steps, index + 1, customer);\n      }, step.time - (index === 0 ? 0 : steps[index - 1].time));\n    }\n  }\n  const steps = [{\n    direction: \"right\",\n    time: 600\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"right\",\n    time: 1000\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"down\",\n    time: 1600\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"right\",\n    time: 4200\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"up\",\n    time: 3800\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"left\",\n    time: 4000\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"up\",\n    time: 1500\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"left\",\n    time: 2000\n  }];\n  const stepsTwo = [{\n    direction: \"right\",\n    time: 600\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"right\",\n    time: 1000\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"up\",\n    time: 3600\n  }, {\n    direction: \"stop\",\n    time: 100\n  }, {\n    direction: \"left\",\n    time: 1000\n  }];\n  moveCustomer(steps, 0, customer);\n  moveCustomer(stepsTwo, 0, customerTwo);\n\n  // const map = [\n  //   [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \"-\",\"-\",\"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\",  \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"\", \"\",\"\", \"\", \" \", \" \", \"\", \"\",\"\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"\",\"\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  // ];\n\n  const map = boundaries.layout;\n  map.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(new Boundary({\n            x: Boundary.width * j,\n            y: Boundary.height * i\n          }));\n          break;\n        case \"+\":\n          cartPickup.push(new CartPickup({\n            x: CartPickup.width * j,\n            y: CartPickup.height * i\n          }));\n          break;\n      }\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    className: \"canvas\",\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 10\n  }, this);\n};\n_s(CartRoutesAuto, \"bwGKLA3x/3lDjozPTcxul3qMtwM=\");\n_c = CartRoutesAuto;\nexport default CartRoutesAuto;\nvar _c;\n$RefreshReg$(_c, \"CartRoutesAuto\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useMemo","Customer","Boundary","CartPickup","jsxDEV","_jsxDEV","CartRoutesAuto","_s","_records","currentDirection","setCurrentDirection","recording","setRecording","canvasRef","boundaries","cartPickup","customer","x","width","y","height","customerTwo","canvas","current","ctx","getContext","forEach","boundary","draw","cartPick","animate","requestAnimationFrame","clearRect","position","radius","velocity","pullCart","update","records","length","direction","push","time","Date","now","console","log","moveCustomer","steps","index","step","moveRight","moveLeft","moveUp","moveDown","stopMovingHorizontal","stopMovingVertical","setTimeout","stepsTwo","map","layout","row","i","symbol","j","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohad/Desktop/GitCollaborationDemo/supermarket/src/components/cart/CartRoutesAuto.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useMemo } from \"react\"; // Importing useRef and useEffect hooks\nimport \"./CartRoutes.scss\";\nimport Customer from \"./Customers/Customer\";\nimport Boundary from \"./Map/Boundary\";\nimport CartPickup from \"./Map/CartPickup\";\n\ntype recordingArray = {\n  direction: string;\n  time: number;\n  y: number;\n  x: number;\n};\n\ninterface RoutesProps {}\n\nconst CartRoutesAuto: React.FC<RoutesProps> = () => {\n  \n  const [currentDirection, setCurrentDirection] = useState(\"\");\n  const [recording, setRecording] = useState<recordingArray[]>([]);\n  // let recording: recordingArray[] = [];\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const boundaries = useMemo(() => {\n    const boundaries: Boundary[] = [];\n    return boundaries;\n  }, []);\n  const cartPickup = useMemo(() => {\n    const cartPickup: CartPickup[] = [];\n    return cartPickup;\n  }, []);\n    \n  const customer = useMemo(() => {\n    const customer: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customer;\n  }, []);\n  const customerTwo = useMemo(() => {\n    const customerTwo: Customer = new Customer(\n      {\n        x: Boundary.width + Boundary.width / 2,\n        y: Boundary.height + Boundary.height / 2,\n      },\n      { x: 0, y: 0 }\n    );\n    return customerTwo;\n  }, []);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas!.getContext(\"2d\");\n    canvas!.height = 470;\n    canvas!.width = 600;\n    boundaries.forEach((boundary) => {\n      boundary.draw(ctx);\n    });\n    cartPickup.forEach((cartPick) => {\n      cartPick.draw(ctx);\n    });\n\n    function animate() {\n      requestAnimationFrame(animate);\n      ctx!.clearRect(0, 0, canvas!.width, canvas!.height);\n      boundaries.forEach((boundary) => {\n        boundary.draw(ctx);\n        if (\n          customer.position.y - customer.radius +3+ customer.velocity.y <=\n            boundary.position.y + boundary.height &&\n          customer.position.x + customer.radius -5 + customer.velocity.x >=\n            boundary.position.x &&\n          customer.position.y + customer.radius -3 + customer.velocity.y >=\n            boundary.position.y &&\n          customer.position.x + customer.radius -15 + customer.velocity.x <=\n            boundary.position.x + boundary.width\n        ) {\n          customer.velocity.x = 0;\n          customer.velocity.y = 0;\n        }\n        \n      });\n      cartPickup.forEach((cartPick) => {\n        cartPick.draw(ctx);\n        \n        if (\n          customer.position.y - customer.radius +3+ customer.velocity.y <=\n            cartPick.position.y + cartPick.height &&\n          customer.position.x + customer.radius -5 + customer.velocity.x >=\n            cartPick.position.x &&\n          customer.position.y + customer.radius -3 + customer.velocity.y >=\n            cartPick.position.y &&\n          customer.position.x + customer.radius -15 + customer.velocity.x <=\n            cartPick.position.x + cartPick.width\n        ) {\n          customer.pullCart();\n        }\n      });\n      customer.update(ctx); \n      customerTwo.update(ctx); \n      // console.log(currentDirection);\n       \n    }\n    animate();\n  }, [\n  ]);\n\n\n\n\nlet records = recording \n//if current direction is not the same ast the last direction of records array then push the current direction and time to the records array\nif (currentDirection !== records[records.length - 1]?.direction) {\nrecords.push ({direction: currentDirection, time: Date.now()\n,y: customer.position.y, x: customer.position.x})\n}\nconsole.log(records);\nfunction moveCustomer(steps: any[], index: number, customer: Customer) {\n  if (index < steps.length) {\n    let step = steps[index];\n    \n    if (step.direction === \"right\") {\n      customer.moveRight();\n    } else if (step.direction === \"left\") {\n      customer.moveLeft();\n    } else if (step.direction === \"up\") {\n      customer.moveUp();\n    } else if (step.direction === \"down\") {\n      customer.moveDown();\n    } else if (step.direction === \"stop\") {\n      customer.stopMovingHorizontal();\n      customer.stopMovingVertical();\n    } else if (step.direction === \"end\") {\n      customer.stopMovingHorizontal();\n      customer.stopMovingVertical();\n      return;\n    }\n    \n    setTimeout(() => {\n      moveCustomer(steps, index + 1, customer);\n    }, step.time - (index === 0 ? 0 : steps[index - 1].time));\n  }\n}\n\n\n\nconst steps = [\n  { direction: \"right\", time: 600 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"right\", time: 1000 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"down\", time: 1600 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"right\", time: 4200 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"up\", time: 3800 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"left\", time: 4000 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"up\", time: 1500 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"left\", time: 2000 },\n];\nconst stepsTwo = [\n  { direction: \"right\", time: 600 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"right\", time: 1000 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"up\", time: 3600 },\n  { direction: \"stop\", time: 100 },\n  { direction: \"left\", time: 1000 },\n];\nmoveCustomer(steps, 0, customer);\nmoveCustomer(stepsTwo, 0, customerTwo);\n\n\n\n  // const map = [\n  //   [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"\", \"-\",\"-\",\"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\",  \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \"\", \"\",\"\", \"\", \" \", \" \", \"\", \"\",\"\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"\",\"\", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"+\", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \"\", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\" \", \" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \"-\",\"-\", \"-\", \"-\", \" \", \"-\", \"-\",\"-\", \"-\", \" \", \" \", \"-\", \"-\",\"-\", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\" \", \" \", \" \", \" \", \" \", \" \",\"-\", \"-\", \"-\", \"-\", \"-\",],\n  //   [\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\",\"-\", \"-\", \"-\", \"-\", \"-\", ],\n  // ];\n\n  const map= boundaries.layout\n  map.forEach((row, i) => {\n    row.forEach((symbol, j) => {\n      switch (symbol) {\n        case \"-\":\n          boundaries.push(\n            new Boundary({\n              x: Boundary.width * j,\n              y: Boundary.height * i,\n            })\n          );\n          break;\n          \n        case \"+\" :\n          cartPickup.push(\n            new CartPickup({\n              x: CartPickup.width * j,\n              y: CartPickup.height * i,\n            })\n          );\n          break;\n      }\n    })\n  });\n\n  return <canvas className=\"canvas\" ref={canvasRef}></canvas>;\n};\n\nexport default CartRoutesAuto;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}